@page "/bookIndex"
@inject BookService BookService
@inject NavigationManager Nav
@using Application.Dtos.Books

<div class="d-flex justify-content-center mt-4">
    <div class="w-100 card border-0 p-2" style="max-width: 1100px;">
        <div class="card-header bg-primary bg-gradient py-2">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Book List</h2>
                </div>
            </div>
        </div>

        <div class="card-body border p-2">
            <div class="row pb-2">
                <div class="col-6 offset-6 text-end">
                    <a class="btn btn-primary bg-gradient mb-2" href="/add-book">
                        <i class="bi bi-plus-circle"></i> Add New Book
                    </a>
                </div>
            </div>

            @if (books == null)
            {
                <p>No books found.</p>
            }

            else if (books.Count == 0)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <table class="table table-bordered table-striped">
                    <thead class="bg-primary bg-gradient text-white">
                        <tr>
                            <th>ID</th>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Genre</th>
                            <th>ISBN</th>
                            <th>Total Copies</th>
                            <th>Available Copies</th>
                            <th>Category</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var b in books)
                        {
                            <tr>
                                <td>@b.Id</td>
                                <td>@b.Title</td>
                                <td>@b.Author</td>
                                <td>@b.Genre</td>
                                <td>@b.ISBN</td>
                                <td>@b.TotalCopies</td>
                                <td>@b.AvailableCopies</td>
                                <td>@b.CategoryName</td>
                                <td>
                                    <div class="d-flex gap-2 justify-content-start">
                                        <a class="btn btn-sm btn-primary" href="/edit-book/@b.Id">
                                            <i class="bi bi-pencil-square"></i> Edit
                                        </a>
                                        <a class="btn btn-sm btn-danger" href="/delete-book/@b.Id">
                                            <i class="bi bi-trash"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

@code {
    List<BookDto> books = new();

    protected override async Task OnInitializedAsync()
    {
        books = await BookService.GetBooksAsync();
    }
}
